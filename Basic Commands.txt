git init //initialize local git repository

git add <file> //Add file(s) to index

git status //Check status of working tree

git commit //Commit changes in index (options)

//Github
git push //Push to remote repository

git pull //Pull latest from repository

git clone //Clone repository into a new directory


-----------------------------------------------------
git --version : versioon du git installer

touch index.html ==> tasna3 fichier .ext




1) tasna3 les fichiers
2)git init
3)la configuration add ur name and email 
git config --global user.name 'Mohamed Amine Ben Ammar'
git config --global user.email 'Mohamed Amine Ben Ammar@gmial.com'
4) ajout d'un fichier (par exemple index.html)
git add index.html => bél commande héthi 7atinéh fi blassa ésmha sataging area 9bal maitém él ba3thane bté3ou bérrasmi
**to see if sarou des changements nésta3mlou git status
5)kénék u wanna remove it from that staging area (éli hiya él blassa 9bal maisir féha él ba3théne) 
git rm --cached index.html

**fazette
git add *.html => il ajoute aye 7aja.html
git add . => add everything 

========> until now we still haven't commited them yet

 *******
ki yabda 3andék a file déja fél staging area ou tu le modifie ou ta3méll git status tal9a ke sar 3lih changement
ki yabda fichier tu le mdifier lézmék t3awéd t7otou fél staging area>
ki ta3méll add yarja3 lél staging area

6) 1- git commit (commande chéi7a man8ir options)
béhi l'éxécution de cette commande leads to i7éllék vm editor 
u can't type so énzéll 3lé la lettre 'i'
   2-  i : insert mode (wa9tha u can type fél terminal)
	aye 7aja 9odémha # its a comment 
	néktbou (ou a7na fél insertion mode)
intial commit (ou tous simplement na7i él comment)
   3- enzelle ESC bch to5roje mél insert mode
   4- néktbou :wq

==>él files éli kénou fél staging area now are commited

2 émé facon la plus utilisé:
ki yabda 3ana des changments sur des fichiers : 
lézémna : 
1-adding them to the staging area 
2-then commit them with this command : 
	git commit -m 'changed app.js'
	git commit -m 'nom-du-changement nom-du-fichier.ext'
	git commit -m 'another change' ==> it will commit everything (kol chai directorys and files + don't forget to add them to the staging area 9bal :D)
	git commit -m 'nom-du-changement' 
(We skipped the whole editing stage)

-----------------------------------------------------------------------
How to use git ignore ? :
gitignore is a file that we can include the files or the folders that we don't
want to include in our repository at all
(even if we use git add . to add everything its not gonna add the .gitignore file)

tous simplement we write then name of the file in the .gitignore file so it will not bonna be included
najmou nésta3mlou the same faza 3lé directorys
/nom-du-directory kénék bch t7otou fél .gitignore
*.txt =>aye fichier dans l'ext est .txt

------------------------------------------------------------------------

Branches:
Au lieu de modifier the main code té5dém 3lé partie de ce code until u finish the work 
then the part coeded will be added later

1-Create a branch called what ever 
2-work on that branch 
3-it gonna be commited but its not gonna be committed to the main branch


to create a branch:
git branch mybranch
git branch nom-du-branche
le faite d'écrire él commande héthi fél terminal
it didn't change us to that branch mazélna 3lé él master branch
ki téktéb git status => i9ollék rak on the main branch

So to  Switch from branch to another branch :
git checkout nom-du-branche

----------------------------------------------------------------
Let's say we wanna merge the code :
lézmék tkoun fél master branch:
git merge login 
1- git merge nom-du-branch (nom-du-branch éli t7éb él code éli téktéb féha be merged m3a my code)
==> l'éxécution de cette commande bch t7éllék fenétre
2- ténzéll 3lé 'i'
3- téktéb fél commande line why this merge is neccassery
	example : Added login
4- tézéll 3lé bouton ESC
5-téktéb :wq
6- Enter

=>tawa ki tabda fél master branch u can see él changes éli sarou fél 
login branch


-------------------------------------------------------------------
Now we will work with remote repository (GitHub)